apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//这个必须有，不知道为什么，github上新建一个，放到这里。
def siteUrl = 'https://github.com/ChinaVolvocars/common'
def gitUrl = 'https://github.com/ChinaVolvocars/common.git'

//发布到JCenter上的项目名字，填写自己的
def libName = "common"

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

//引用形式 compile'com.haichenyi.aloe:utils:1.0.0'

version = "1.0.0"
group = "com.example.common"


android {
    compileSdkVersion 27

    // 随意命名，我不知道干啥用的
    resourcePrefix "chernoyxh"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

bintray {
//这里就是我们刚说过的user和apikey
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'android'//自己创建的仓库名字，要跟Bintray上创建的仓库一样
        name = libName//上传到JCenter的package的名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl //这个好像是必须的，我尝试过传空字符串好像是不成功的
        licenses = ['Apache-2.0']//不能随便写，只能是仓库创建时选择的license type
//        userOrg = 'mumusalibrary' //自己创建的organization名称
        publish = true // 是否是公开项目，公开别人可以引用
        version {
            name = '1.0.0'//版本名，上面好像已经有配置了
            desc = '工具类'//描述，自己定义
            released = new Date()
            vcsTag = 'v1.0.0'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}

install {
//这里的xxx按你自己的填就可以了，其他都不用改
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'common'//项目名
                description 'common项目描述'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'Apache-2.0' //和之前自己定义的协议一致
                        url 'https://raw.githubusercontent.com/minggo620/Pluto-Android/master/LICENSE'
                    }
                }
                developers {

                    developer {
                        id 'ChinaVolvocars'        //填写bintray或者github的用户名，这里我填的是我的github名
                        name 'tiger'         //姓名，这里我填的是Bintray上的昵称
                        email 'atlantisspeed@gmail.com'//邮箱
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false //必须添加以免出错
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
javadoc {
    options {
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

